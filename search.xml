<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[路加福音12:13~34]]></title>
      <url>https://Yu-Che-Gao.github.io/steven-blog/2017/05/08/%E8%B7%AF%E5%8A%A0%E7%A6%8F%E9%9F%B312-13-34/</url>
      <content type="html"><![CDATA[<h1 id="觀察"><a href="#觀察" class="headerlink" title="觀察"></a>觀察</h1><h2 id="分段"><a href="#分段" class="headerlink" title="分段"></a>分段</h2><p>V13~V15 耶穌警告眾人不要貪心</p>
<p>V16~V21 財主的比喻</p>
<ul>
<li>V16~V19 財主煩惱田產的收藏</li>
<li>V20~V21 神對財主的評論</li>
</ul>
<p>V22~V34 耶穌對門徒說</p>
<ul>
<li>V22~V23 前述比喻的結論</li>
<li>V24~V30 前述比喻的舉例</li>
<li>V31~V34 整個事件的總結</li>
</ul>
<h2 id="本段大意"><a href="#本段大意" class="headerlink" title="本段大意"></a>本段大意</h2><p>有一個人想請耶穌成為分家產的中間人，耶穌告訴眾人不要貪心。耶穌用比喻繼續解釋，以&quot;財主過世後帶不走地上的田產&quot;的比喻作解釋。而耶穌回過頭來對門徒說話，首先先以&quot;不要為生命憂慮&quot;下結論，接著進一步以烏鴉、百合花與野地的草作為例子詮釋&quot;憂慮&quot;，最後以&quot;財寶即為心之所在&quot;作為結論。</p>
<h1 id="解釋"><a href="#解釋" class="headerlink" title="解釋"></a>解釋</h1><h2 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h2><ol>
<li>&quot;請耶穌分家產&quot;跟&quot;不要貪心&quot;有甚麼關係? (V14-V15)</li>
<li>有錢的財主在擔心甚麼? (V17)</li>
<li>甚麼是財主的&quot;無知&quot;? (V20)</li>
<li>甚麼叫做&quot;在神面前不富足&quot;? (V21)</li>
<li>耶穌的結論(V22-V23)跟&quot;財主的比喻&quot;(V16-V21)有甚麼關係</li>
<li>&quot;財寶即心之所在&quot;(V34)跟&quot;求神的國&quot;(V31)有甚麼關係?</li>
<li>所以為生命憂慮錯了嗎?(V22)</li>
</ol>
<h2 id="Answer"><a href="#Answer" class="headerlink" title="Answer"></a>Answer</h2><ol>
<li>上文耶穌在講受到逼迫時當有的態度(V8-V12)，這個人突然插一句要求耶穌分家產，很顯然這個人並沒有聽耶穌在講甚麼，滿腦子只想要耶穌以夫子的身分幫他分家產</li>
<li>錢太多(V16)沒有地方可以藏(V17)</li>
<li>V18-V19財主想把原本的房子拆掉，蓋一個更大的房子來解決他的擔心，V20表達出這是財主的無知</li>
<li>凡為自己積財而且在神面前不富足--&gt;就像比喻中的財主(V21) 等價於 不像比喻中的財主--&gt;不都為自己積財或者在神面前富足的，V21重點在不要像比喻中的財主</li>
<li>無知財主擔心沒有地方收藏其實也跟我們為生命的擔心是一樣的</li>
<li>這裡的財寶並不是指字面意義上的天上的財寶或是地上的財寶。V31講論要看重神的國勝過看重&quot;這些東西&quot;，因此這裡的財寶指的是所看重的東西</li>
<li>V24, V27, V28 用烏鴉、百合花跟野地裡的草來表達人生本來就無常，如果人生本該無常，有甚麼好擔心的</li>
</ol>
<h1 id="歸納"><a href="#歸納" class="headerlink" title="歸納"></a>歸納</h1><ol>
<li>不要看重&quot;想要的&quot;大過&quot;需要的&quot;</li>
<li>&quot;憂慮&quot;在神看來是跟&quot;蓋更大的倉房&quot;一樣荒唐</li>
<li>人生無常，何必憂慮</li>
<li>不需憂慮，只要看重神</li>
</ol>
<h1 id="應用"><a href="#應用" class="headerlink" title="應用"></a>應用</h1><ol>
<li>憂慮時先禱告</li>
<li>調整優先次序</li>
<li>多喝水，少喝飲料</li>
<li>調整&quot;熬夜&quot;的心態</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Deep Learning探索之旅：初來乍到]]></title>
      <url>https://Yu-Che-Gao.github.io/steven-blog/2017/04/05/Deep-Learning%E6%8E%A2%E7%B4%A2%E4%B9%8B%E6%97%85%EF%BC%9A%E5%88%9D%E4%BE%86%E4%B9%8D%E5%88%B0/</url>
      <content type="html"><![CDATA[<h1 id="基本安裝"><a href="#基本安裝" class="headerlink" title="基本安裝"></a>基本安裝</h1><p>在<a href="https://www.tensorflow.org/install/install_windows" target="_blank" rel="external">tesorflow官網</a>寫得很清楚，先安裝python 3.5.x，再用pip3安裝tensorflow</p>
<h1 id="為甚麼使用Deep-Learning"><a href="#為甚麼使用Deep-Learning" class="headerlink" title="為甚麼使用Deep Learning"></a>為甚麼使用Deep Learning</h1><p>Deep Learning簡單來說是類神經網路的強化版，其背後的設計理念是找到離解答最近的&quot;距離&quot;(就是cross-entropy)。然而中間有許多相當複雜的數學理論基礎。下面就先來簡介一下它到底用到那些數學。</p>
<h1 id="專門壓縮向量的函數：Softmax-Function"><a href="#專門壓縮向量的函數：Softmax-Function" class="headerlink" title="專門壓縮向量的函數：Softmax Function"></a>專門壓縮向量的函數：Softmax Function</h1><p>話不多說，上個公式先</p>
<center>

<img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/e348290cf48ddbb6e9a6ef4e39363568b67c09d3" alt="Softmax Function"> , for j = 1, …, K

</center>

<p>公式看起來複雜其實他要做的事情很簡單，就只是要把同一個向量內所有數字都壓縮到0和1之間而且總合為1而已。讀者可以參考<a href="https://en.wikipedia.org/wiki/Softmax_function" target="_blank" rel="external">維基</a>的定義。</p>
<p>但是Deep Learning要把這個函式用在哪呢</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Mongodb基本操作：insert & update]]></title>
      <url>https://Yu-Che-Gao.github.io/steven-blog/2017/03/26/Mongodb%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%EF%BC%9Ainsert-update/</url>
      <content type="html"><![CDATA[<h1 id="Insert-amp-Update"><a href="#Insert-amp-Update" class="headerlink" title="Insert &amp; Update"></a>Insert &amp; Update</h1><h2 id="insert"><a href="#insert" class="headerlink" title="insert"></a>insert</h2><p>mongodb insert的方式</p>
<pre class="line-numbers language-javascript"><code class="language-javascript">db<span class="token punctuation">.</span>log<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    編號<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
    書本資料<span class="token punctuation">:</span> <span class="token string">"超人氣台灣美食"</span><span class="token punctuation">,</span>
    價錢<span class="token punctuation">:</span> <span class="token number">250</span><span class="token punctuation">,</span>
    借閱人<span class="token punctuation">:</span> <span class="token string">"小華"</span><span class="token punctuation">,</span>
    借閱時間<span class="token punctuation">:</span> <span class="token function">ISODate</span><span class="token punctuation">(</span><span class="token string">"2015-07-30T22:30:30:00Z"</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="update"><a href="#update" class="headerlink" title="update"></a>update</h2><p>mongodb update的方式</p>
<pre class="line-numbers language-javascript"><code class="language-javascript">db<span class="token punctuation">.</span>log<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    書本資料<span class="token punctuation">:</span><span class="token string">"超人氣台灣美食"</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    $<span class="token keyword">set</span><span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token string">"借閱人"</span><span class="token punctuation">:</span> <span class="token string">"高宇哲"</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="Field-Update-Operators"><a href="#Field-Update-Operators" class="headerlink" title="Field Update Operators"></a>Field Update Operators</h1><p>Reference: <a href="https://docs.mongodb.com/manual/reference/operator/update-field/" target="_blank" rel="external">https://docs.mongodb.com/manual/reference/operator/update-field/</a></p>
<h2 id="batch-insert"><a href="#batch-insert" class="headerlink" title="batch insert"></a>batch insert</h2><p>mongodb需要大量insert時的方式</p>
<pre class="line-numbers language-javascript"><code class="language-javascript">db<span class="token punctuation">.</span>user<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
db<span class="token punctuation">.</span>user<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>_id<span class="token punctuation">:</span><span class="token string">"001"</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span><span class="token string">"小明"</span><span class="token punctuation">,</span> balance<span class="token punctuation">:</span><span class="token number">1500</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>_id<span class="token punctuation">:</span><span class="token string">"002"</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span><span class="token string">"小高"</span><span class="token punctuation">,</span> balance<span class="token punctuation">:</span><span class="token number">3000</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>_id<span class="token punctuation">:</span><span class="token string">"003"</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span><span class="token string">"小華"</span><span class="token punctuation">,</span> balance<span class="token punctuation">:</span><span class="token number">4500</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>_id<span class="token punctuation">:</span><span class="token string">"004"</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span><span class="token string">"小花"</span><span class="token punctuation">,</span> balance<span class="token punctuation">:</span><span class="token number">1500</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>_id<span class="token punctuation">:</span><span class="token string">"005"</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span><span class="token string">"魔人啾啾"</span><span class="token punctuation">,</span> balance<span class="token punctuation">:</span><span class="token number">1800</span><span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="inc-operator"><a href="#inc-operator" class="headerlink" title="$inc operator"></a>$inc operator</h2><p>使用$inc運算子對某欄位增加一特定值，其格式為</p>
<pre><code>{ $inc: { &lt;field1&gt;: &lt;amount1&gt;, &lt;field2&gt;: &lt;amount2&gt;, ... } }
</code></pre><p>Example：</p>
<pre class="line-numbers language-javascript"><code class="language-javascript">db<span class="token punctuation">.</span>user<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    name<span class="token punctuation">:</span> <span class="token string">"小明"</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    $inc<span class="token punctuation">:</span> <span class="token punctuation">{</span>balance<span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1000</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="set-operator"><a href="#set-operator" class="headerlink" title="$set operator"></a>$set operator</h2><pre class="line-numbers language-javascript"><code class="language-javascript">db<span class="token punctuation">.</span>user<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    name<span class="token punctuation">:</span> <span class="token string">"小明"</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    $<span class="token keyword">set</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>balance<span class="token punctuation">:</span><span class="token number">1500</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="unset-operator"><a href="#unset-operator" class="headerlink" title="$unset operator"></a>$unset operator</h2><p>使用$unset運算子刪除部分欄位，其格式如下：</p>
<pre><code>{ $unset: { &lt;field1&gt;: &quot;&quot;, ... } }
</code></pre><p>Example：</p>
<pre class="line-numbers language-javascript"><code class="language-javascript">db<span class="token punctuation">.</span>user<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    name<span class="token punctuation">:</span> <span class="token string">"小明"</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    $unset<span class="token punctuation">:</span><span class="token punctuation">{</span>balance<span class="token punctuation">:</span><span class="token string">""</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><h2 id="Question：將以下資料的UST改成NTD-price乘以31-4"><a href="#Question：將以下資料的UST改成NTD-price乘以31-4" class="headerlink" title="Question：將以下資料的UST改成NTD, price乘以31.4"></a>Question：將以下資料的UST改成NTD, price乘以31.4</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token punctuation">{</span> _id<span class="token punctuation">:</span> <span class="token string">"001"</span><span class="token punctuation">,</span> product<span class="token punctuation">:</span> <span class="token string">"Sony, SBH60"</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">"USD"</span><span class="token punctuation">,</span> price<span class="token punctuation">:</span> <span class="token number">76.4</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">{</span> _id<span class="token punctuation">:</span> <span class="token string">"002"</span><span class="token punctuation">,</span> product<span class="token punctuation">:</span> <span class="token string">"Sony, SBH70"</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">"USD"</span><span class="token punctuation">,</span> price<span class="token punctuation">:</span> <span class="token number">75.8</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">{</span> _id<span class="token punctuation">:</span> <span class="token string">"003"</span><span class="token punctuation">,</span> product<span class="token punctuation">:</span> <span class="token string">"Sony, SBH80"</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">"NTD"</span><span class="token punctuation">,</span> price<span class="token punctuation">:</span> <span class="token number">2980</span> <span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h2 id="Ans"><a href="#Ans" class="headerlink" title="Ans"></a>Ans</h2><pre class="line-numbers language-javascript"><code class="language-javascript">use product
db<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
db<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span> _id<span class="token punctuation">:</span> <span class="token string">"001"</span><span class="token punctuation">,</span> product<span class="token punctuation">:</span> <span class="token string">"Sony, SBH60"</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">"USD"</span><span class="token punctuation">,</span> price<span class="token punctuation">:</span> <span class="token number">76.4</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> _id<span class="token punctuation">:</span> <span class="token string">"002"</span><span class="token punctuation">,</span> product<span class="token punctuation">:</span> <span class="token string">"Sony, SBH70"</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">"USD"</span><span class="token punctuation">,</span> price<span class="token punctuation">:</span> <span class="token number">75.8</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> _id<span class="token punctuation">:</span> <span class="token string">"003"</span><span class="token punctuation">,</span> product<span class="token punctuation">:</span> <span class="token string">"Sony, SBH80"</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">"NTD"</span><span class="token punctuation">,</span> price<span class="token punctuation">:</span> <span class="token number">2980</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>

db<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    type<span class="token punctuation">:</span><span class="token string">"USD"</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    $mul<span class="token punctuation">:</span> <span class="token punctuation">{</span>price<span class="token punctuation">:</span><span class="token number">31.4</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    $<span class="token keyword">set</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>type<span class="token punctuation">:</span><span class="token string">"NTD"</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    multi<span class="token punctuation">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="Array-Update-Operator"><a href="#Array-Update-Operator" class="headerlink" title="Array Update Operator"></a>Array Update Operator</h1><h2 id="push-operator"><a href="#push-operator" class="headerlink" title="$push operator"></a>$push operator</h2><pre class="line-numbers language-javascript"><code class="language-javascript">use product
db<span class="token punctuation">.</span>serial<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
db<span class="token punctuation">.</span>serial<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    _id<span class="token punctuation">:</span> <span class="token string">"001"</span><span class="token punctuation">,</span> list<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

db<span class="token punctuation">.</span>serial<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    _id<span class="token punctuation">:</span> <span class="token string">"001"</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    $push<span class="token punctuation">:</span> <span class="token punctuation">{</span>list<span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

db<span class="token punctuation">.</span>serial<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    _id<span class="token punctuation">:</span> <span class="token string">"001"</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    $push<span class="token punctuation">:</span> <span class="token punctuation">{</span>list<span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

db<span class="token punctuation">.</span>serial<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    _id<span class="token punctuation">:</span> <span class="token string">"001"</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    $push<span class="token punctuation">:</span> <span class="token punctuation">{</span>
        list<span class="token punctuation">:</span><span class="token punctuation">{</span>$each<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">70</span><span class="token punctuation">]</span><span class="token punctuation">,</span> $position<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[重建Compiler：環境準備(使用visual studio 2017)]]></title>
      <url>https://Yu-Che-Gao.github.io/steven-blog/2017/03/26/%E9%87%8D%E5%BB%BACompiler%EF%BC%9A%E7%92%B0%E5%A2%83%E6%BA%96%E5%82%99/</url>
      <content type="html"><![CDATA[<h1 id="安裝cygwin64"><a href="#安裝cygwin64" class="headerlink" title="安裝cygwin64"></a>安裝cygwin64</h1><p>參考Kim Thomas錄製的影片以安裝cygwin64在windows裡面</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/9Y6O5_jsVSQ?rel=0" frameborder="0" allowfullscreen></iframe>

<h1 id="安裝win-flex-bison"><a href="#安裝win-flex-bison" class="headerlink" title="安裝win flex-bison"></a>安裝win flex-bison</h1><p>折騰了一番才找到可以用在Visual Studio上的<a href="http://www.di-mgt.com.au/flex_and_bison_in_msvc.html" target="_blank" rel="external">方案</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[重新審視C語言：型別(Type)(上)]]></title>
      <url>https://Yu-Che-Gao.github.io/steven-blog/2017/03/24/%E9%87%8D%E6%96%B0%E5%AF%A9%E8%A6%96C%E8%AA%9E%E8%A8%80%EF%BC%9A%E5%9E%8B%E5%88%A5-Type/</url>
      <content type="html"><![CDATA[<h1 id="基本定義"><a href="#基本定義" class="headerlink" title="基本定義"></a>基本定義</h1><p>物件(Object)： 記憶體裡的某個位置，它的內容可以用來表示某些值<br>
變數(Variable)： 有名稱的物件<br>
型別(Type)： 物件占用記憶體的空間，及其值得編碼方式</p>
<h1 id="C語言型別的分類"><a href="#C語言型別的分類" class="headerlink" title="C語言型別的分類"></a>C語言型別的分類</h1><p>1.基本型別</p>
<ul>
<li>標準浮點數型別</li>
<li>擴充浮點數型別</li>
<li>實數浮點數型別</li>
<li>複數浮點數型別</li>
</ul>
<p>2.列舉型別(Enumerated types)</p>
<p>3.void型別</p>
<p>4.衍生型別</p>
<ul>
<li>指標型別(Pointer types)</li>
<li>陣列型別(Array types)</li>
<li>結構型別(Structure types)</li>
<li>聯合型別(Union types)</li>
<li>函式型別(Function types)</li>
</ul>
<h1 id="整數型別"><a href="#整數型別" class="headerlink" title="整數型別"></a>整數型別</h1><h2 id="標準有號型別-amp-標準無號型別"><a href="#標準有號型別-amp-標準無號型別" class="headerlink" title="標準有號型別 &amp; 標準無號型別"></a>標準有號型別 &amp; 標準無號型別</h2><p>下表列出了有號以及無號的標準型別，每個有號型別都有對應的無號型別，其中_Bool為C99加入用來表示布林值的無號型別。</p>
<table>

<tr><th colspan="2">有號</th><th colspan="2">無號</th></tr>

<tr><th>型別</th><th>同義</th><th>型別</th><th>同義</th></tr>

<tr><td>signed char</td><td></td><td>unsigned char</td><td></td></tr>

<tr><td>int</td><td>signed, signed int</td><td>unsinged int</td><td>unsigned</td></tr>

<tr><td>short</td><td>short int, singed int, signed short, signed short int</td><td>unsigned short</td><td>unsigned short int</td></tr>

<tr><td>long</td><td>long int, signed long, signed long int</td><td>unsinged long</td><td>unsinged long int</td></tr>

<tr><td>long long (C99)</td><td>long long int, signed long long, singed long long int</td><td>unsinged long long (C99)</td><td>unsinged long long int</td></tr>

<tr><td></td><td></td><td>_Bool (C99)</td><td>bool (stdbool.h)</td></tr>

</table>

<p>你可以自行決定是否要將char變數裡的數字解譯成字元碼或是其他東西，以以下程式碼為例</p>
<pre class="line-numbers language-clike"><code class="language-clike">#include<span class="token operator">&lt;</span>stdio<span class="token punctuation">.</span>h<span class="token operator">></span>
int <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    char ch<span class="token operator">=</span><span class="token string">'A'</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// A variable with type char.</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The character %c has the character code %d.\n"</span><span class="token punctuation">,</span> ch<span class="token punctuation">,</span> ch<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token punctuation">;</span> ch <span class="token operator">&lt;=</span> <span class="token string">'Z'</span><span class="token punctuation">;</span> <span class="token operator">++</span>ch <span class="token punctuation">)</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%2c"</span><span class="token punctuation">,</span> ch<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>此程式碼結果將會是</p>
<pre class="line-numbers language-powershell"><code class="language-powershell">The character A has the character code 65<span class="token punctuation">.</span>
 A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>值得注意的是，若需要char保有小於0或大於127的值，則應該改用signed char或unsinged char</p>
<p>C只對其他標準型別定義最小儲存空間(Minimum Storage Sizes)，雖然整數型別可能比它們的最小儲存空間還大，但實作上必須以以下順序為原則</p>
<pre class="line-numbers language-clike"><code class="language-clike"><span class="token function">sizeof</span><span class="token punctuation">(</span>short<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token function">sizeof</span><span class="token punctuation">(</span>int<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token function">sizeof</span><span class="token punctuation">(</span>long<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token function">sizeof</span><span class="token punctuation">(</span>long long<span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>在C compiler中，limits.h標頭檔裡可以找到整數型別的值範圍，其中也定義了INT_MIN、INT_MAX、UNIT_MAX等巨集，以以下程式碼為例</p>
<pre class="line-numbers language-clike"><code class="language-clike"><span class="token comment" spellcheck="true">// limits.c: Display the value ranges of char and int.</span>
<span class="token comment" spellcheck="true">// ---------------------------------------------------</span>
#include <span class="token operator">&lt;</span>stdio<span class="token punctuation">.</span>h<span class="token operator">></span>
#include <span class="token operator">&lt;</span>limits<span class="token punctuation">.</span>h<span class="token operator">></span> <span class="token comment" spellcheck="true">// Contains the macros CHAR_MIN, INT_MIN, etc.</span>

int <span class="token function">main</span><span class="token punctuation">(</span> <span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Storage sizes and value ranges of the types char and int\n\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The type char is %s.\n\n"</span><span class="token punctuation">,</span> CHAR_MIN <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">"signed"</span> <span class="token punctuation">:</span><span class="token string">"unsigned"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">" Type Size (in bytes) Minimum Maximum\n"</span>
    <span class="token string">"---------------------------------------------------\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">" char %8d %20d %15d\n"</span><span class="token punctuation">,</span> <span class="token function">sizeof</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token punctuation">,</span> CHAR_MIN<span class="token punctuation">,</span> CHAR_MAX <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">" int  %8d %20d %15d\n"</span><span class="token punctuation">,</span> <span class="token function">sizeof</span><span class="token punctuation">(</span>int<span class="token punctuation">)</span><span class="token punctuation">,</span> INT_MIN<span class="token punctuation">,</span> INT_MAX <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>編譯後執行結果將會顯示char以及int的最小和最大值</p>
<pre class="line-numbers language-powershell"><code class="language-powershell">Storage sizes and value ranges of the types char and int

The <span class="token function">type</span> char is signed<span class="token punctuation">.</span>

 <span class="token function">Type</span> Size <span class="token punctuation">(</span>in bytes<span class="token punctuation">)</span> Minimum Maximum
<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span><span class="token operator">-</span>
 char        1                 <span class="token operator">-</span>128             127
 int         4          <span class="token operator">-</span>2147483648      2147483647
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><a href="https://www.tutorialspoint.com/c_standard_library/limits_h.htm" target="_blank" rel="external">tutorialspoint</a>幫我們整理了limits.h還定義了哪些巨集</p>
<h1 id="擁有精確寬度的整數型別-C99"><a href="#擁有精確寬度的整數型別-C99" class="headerlink" title="擁有精確寬度的整數型別(C99)"></a>擁有精確寬度的整數型別(C99)</h1><p>ISO/IEC 9899第225頁定義了stdint.h的所有規格，其中定義了許多已知寬度需求的整數型別</p>
<p>以下擷取規格書中描述stdint.h所定義的種類</p>
<ul>
<li>integer types having certain exact widths</li>
<li>integer types having at least certain specified widths</li>
<li>fastest integer types having at least certain specified widths</li>
<li>integer types wide enough to hold pointers to objects</li>
<li>integer types having greatest width</li>
</ul>
<table>

<tr><th>型別</th><th>意義</th><th>C99實作</th></tr>

<tr><td>intN_t uintN_t</td><td>寬度必須為N位元的整數型別</td><td>not required to provide the types</td></tr>

<tr><td>int_leastN_t uint_leastN_t</td><td>寬度至少為N位元的整數型別</td><td>Required for N = 8, 16, 32, 64</td></tr>

<tr><td>int_fastN_t uint_fastN_t</td><td>寬度至少為N位元且處理最快的型別</td><td>Required for N = 8, 16, 32, 64</td></tr>

<tr><td>intmax_t uintmax_t</td><td>所實作的最寬整數型別</td><td>Required</td></tr>

<tr><td>intptr_t uintptr_t</td><td>足以儲存指標值的整數型別</td><td>not required to provide the types</td></tr>

</table>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[重新審視C語言：語言基礎]]></title>
      <url>https://Yu-Che-Gao.github.io/steven-blog/2017/03/23/%E9%87%8D%E6%96%B0%E5%AF%A9%E8%A6%96C%E8%AA%9E%E8%A8%80%EF%BC%9A%E8%AA%9E%E8%A8%80%E5%9F%BA%E7%A4%8E/</url>
      <content type="html"><![CDATA[<h1 id="C的特性"><a href="#C的特性" class="headerlink" title="C的特性"></a>C的特性</h1><ul>
<li>原始碼可攜性</li>
<li>面對硬體的能力</li>
<li>效率</li>
</ul>
<h1 id="C的歷史"><a href="#C的歷史" class="headerlink" title="C的歷史"></a>C的歷史</h1><p>C可追溯到Richard Martin開發的<a href="https://en.wikipedia.org/wiki/BCPL" target="_blank" rel="external">BCPL</a>語言，1978年出版了第一份C語言的官方文件，簡稱K&amp;R。</p>
<h1 id="C程式的結構"><a href="#C程式的結構" class="headerlink" title="C程式的結構"></a>C程式的結構</h1><p>觀察以下程式碼</p>
<pre class="line-numbers language-clike"><code class="language-clike"><span class="token comment" spellcheck="true">// circle.c: Calculate and print the areas of circles</span>
#include <span class="token operator">&lt;</span>stdio<span class="token punctuation">.</span>h<span class="token operator">></span> <span class="token comment" spellcheck="true">// Preprocessor directive</span>
double <span class="token function">circularArea</span><span class="token punctuation">(</span> double r <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// Function declaration (prototype form)</span>

int <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// Definition of main() begins</span>
<span class="token punctuation">{</span>
    double radius <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">,</span> area <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">;</span>

    <span class="token function">printf</span><span class="token punctuation">(</span> <span class="token string">" Areas of Circles\n\n"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span> <span class="token string">" Radius Area\n"</span>
    <span class="token string">"-------------------------\n"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>

    area <span class="token operator">=</span> <span class="token function">circularArea</span><span class="token punctuation">(</span> radius <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span> <span class="token string">"%10.1f %10.2f\n"</span><span class="token punctuation">,</span> radius<span class="token punctuation">,</span> area <span class="token punctuation">)</span><span class="token punctuation">;</span>
    radius <span class="token operator">=</span> <span class="token number">5.0</span><span class="token punctuation">;</span>
    area <span class="token operator">=</span> <span class="token function">circularArea</span><span class="token punctuation">(</span> radius <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span> <span class="token string">"%10.1f %10.2f\n"</span><span class="token punctuation">,</span> radius<span class="token punctuation">,</span> area <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">// The function circularArea( ) calculates the area of a circle</span>
<span class="token comment" spellcheck="true">// Parameter: The radius of the circle</span>
<span class="token comment" spellcheck="true">// Return value: The area of the circle</span>
double <span class="token function">circularArea</span><span class="token punctuation">(</span> double r <span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// Definition of circularArea( ) begins</span>
<span class="token punctuation">{</span>
    const double pi <span class="token operator">=</span> <span class="token number">3.1415926536</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// Pi is a constant</span>
    <span class="token keyword">return</span> pi <span class="token operator">*</span> r <span class="token operator">*</span> r<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>circularArea()的原型(Prototype)宣告提供了必要的資訊，呼叫此函式的陳述式能得以編譯。但circularArea()放在main()之前，這讓該函式原型宣告變得多餘，這是因為函式的定義本身就是宣告。於是我們可以把C程式先定義到別的C程式中</p>
<h1 id="C語言的原始檔"><a href="#C語言的原始檔" class="headerlink" title="C語言的原始檔"></a>C語言的原始檔</h1><p>通常C語言的原始檔具有下列三點特性</p>
<ul>
<li>前置處理器指示詞</li>
<li>全域宣告</li>
<li>函式定義</li>
</ul>
<p>考慮以下程式碼</p>
<pre class="line-numbers language-clike"><code class="language-clike"><span class="token comment" spellcheck="true">// circle.c: Calculate and print the areas of circles</span>
#include <span class="token operator">&lt;</span>stdio<span class="token punctuation">.</span>h<span class="token operator">></span> <span class="token comment" spellcheck="true">// Preprocessor directive</span>
double <span class="token function">circularArea</span><span class="token punctuation">(</span> double r <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// Function declaration (prototype form)</span>

int <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// Definition of main() begins</span>
<span class="token punctuation">{</span>
    double radius <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">,</span> area <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">;</span>

    <span class="token function">printf</span><span class="token punctuation">(</span> <span class="token string">" Areas of Circles\n\n"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span> <span class="token string">" Radius Area\n"</span>
    <span class="token string">"-------------------------\n"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>

    area <span class="token operator">=</span> <span class="token function">circularArea</span><span class="token punctuation">(</span> radius <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span> <span class="token string">"%10.1f %10.2f\n"</span><span class="token punctuation">,</span> radius<span class="token punctuation">,</span> area <span class="token punctuation">)</span><span class="token punctuation">;</span>
    radius <span class="token operator">=</span> <span class="token number">5.0</span><span class="token punctuation">;</span>
    area <span class="token operator">=</span> <span class="token function">circularArea</span><span class="token punctuation">(</span> radius <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span> <span class="token string">"%10.1f %10.2f\n"</span><span class="token punctuation">,</span> radius<span class="token punctuation">,</span> area <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-clike"><code class="language-clike"><span class="token comment" spellcheck="true">// circulararea.c: Calculates the areas of circles.</span>
<span class="token comment" spellcheck="true">// Called by main() in circle.c</span>

double <span class="token function">circularArea</span><span class="token punctuation">(</span> double r <span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// Definition of circularArea( ) begins</span>
<span class="token punctuation">{</span>
    const double pi <span class="token operator">=</span> <span class="token number">3.1415926536</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// Pi is a constant</span>
    <span class="token keyword">return</span> pi <span class="token operator">*</span> r <span class="token operator">*</span> r<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>每個C原始檔構成了轉譯單位(Translation Unit)，編譯器會依序處理轉譯單位的內容，將原始碼解析成最小的語意單位，稱作符記(Token)</p>
<p>但是在有許多C程式的情況下我們要如何進行編譯呢，我們可以建置一個Makefile來編譯以上程式</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># A basic makefile for "circle".</span>

CC <span class="token operator">=</span> gcc
CFLAGS <span class="token operator">=</span> -Wall -g -std<span class="token operator">=</span>c99
LDFLAGS <span class="token operator">=</span> -lm

circle <span class="token keyword">:</span> circle.o circulararea.o
    <span class="token variable"><span class="token variable">$(</span>CC<span class="token variable">)</span></span> <span class="token variable"><span class="token variable">$(</span>LDFLAGS<span class="token variable">)</span></span> -o <span class="token variable">$@</span> $^
circle.o <span class="token keyword">:</span> circle.c
    <span class="token variable"><span class="token variable">$(</span>CC<span class="token variable">)</span></span> <span class="token variable"><span class="token variable">$(</span>CFLAGS<span class="token variable">)</span></span> -o <span class="token variable">$@</span> -c $<span class="token operator">&lt;</span>
circulararea.o: circulararea.c
    <span class="token variable"><span class="token variable">$(</span>CC<span class="token variable">)</span></span> <span class="token variable"><span class="token variable">$(</span>CFLAGS<span class="token variable">)</span></span> -o <span class="token variable">$@</span> -c $<span class="token operator">&lt;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>只要將以上程式放在原始檔同一層下make指令就能進行編譯，可以參考<a href="http://mropengate.blogspot.tw/2015/06/makefile-makefile.html" target="_blank" rel="external">猴子都會寫的Makefile</a>，完整程式碼已放於<a href="https://github.com/Yu-Che-Gao/steven-blog/tree/gh-pages/code/c-sourcefile" target="_blank" rel="external">github</a>上</p>
<p>參考資料：C in a nutshell</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[你所不知道的C#: 非同步&執行緒]]></title>
      <url>https://Yu-Che-Gao.github.io/steven-blog/2017/03/04/%E4%BD%A0%E6%89%80%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84C-%E9%9D%9E%E5%90%8C%E6%AD%A5-%E5%9F%B7%E8%A1%8C%E7%B7%92/</url>
      <content type="html"><![CDATA[<h1 id="非同步的C-程式"><a href="#非同步的C-程式" class="headerlink" title="非同步的C#程式"></a>非同步的C#程式</h1><h2 id="一個同步的下載網頁程式"><a href="#一個同步的下載網頁程式" class="headerlink" title="一個同步的下載網頁程式"></a>一個同步的下載網頁程式</h2><pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token keyword">using</span> System<span class="token punctuation">;</span>
<span class="token keyword">using</span> System<span class="token punctuation">.</span>Net<span class="token punctuation">;</span>

<span class="token keyword">namespace</span> test
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Program</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">string</span> content <span class="token operator">=</span> <span class="token function">downloadPage</span><span class="token punctuation">(</span><span class="token string">"https://yu-che-gao.github.io/steven-blog/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"網頁內容總共為 {0} 個字元。"</span><span class="token punctuation">,</span> content<span class="token punctuation">.</span>Length<span class="token punctuation">)</span><span class="token punctuation">;</span>
            Console<span class="token punctuation">.</span><span class="token function">ReadKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">static</span> <span class="token keyword">string</span> <span class="token function">downloadPage</span><span class="token punctuation">(</span><span class="token keyword">string</span> url<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">var</span> webClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 須引用 System.Net 命名空間。</span>
            <span class="token keyword">string</span> content <span class="token operator">=</span> webClient<span class="token punctuation">.</span><span class="token function">DownloadString</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> content<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>考慮上面程式，上面程式利用WebClient的DownloadString()方法取得吾人部落格的原始碼，以下擷取重點程式。</p>
<pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token keyword">var</span> webClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 須引用 System.Net 命名空間。</span>
<span class="token keyword">string</span> content <span class="token operator">=</span> webClient<span class="token punctuation">.</span><span class="token function">DownloadString</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>但可能會因為網路速度的不同，DownloadString方法執行時間會讓程式當在那裏。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[你所不知道的C#: Compiler篇]]></title>
      <url>https://Yu-Che-Gao.github.io/steven-blog/2017/02/24/%E4%BD%A0%E6%89%80%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84C-Compiler%E7%AF%87/</url>
      <content type="html"><![CDATA[<h1 id="基本Compiler原理"><a href="#基本Compiler原理" class="headerlink" title="基本Compiler原理"></a>基本Compiler原理</h1><center><img src="/steven-blog/images/compiler-flow.jpg" alt="Compiler-flow" title="編譯器流程"></center>

<p>上圖即是一般編譯器的處理過程，編譯，組譯，連結，之後載入。</p>
<center>編譯示意圖</center>

<center><img src="/steven-blog/images/compiler-and-elf.jpg" alt="編譯示意圖" title="編譯示意圖"></center>

<center>連結示意圖</center>

<center><img src="/steven-blog/images/linker.jpg" alt="連結示意圖" title="連結示意圖"></center>

<center>載入示意圖</center>

<center><img src="/steven-blog/images/loading.jpg" alt="載入示意圖" title="載入示意圖"></center>

<p>進階閱讀:</p>
<ol>
<li>交大開放式課程: <a href="http://ocw.nctu.edu.tw/course_detail.php?bgid=9&amp;gid=0&amp;nid=546#.WK_1yvl96Uk" target="_blank" rel="external">作業系統設計與實作</a></li>
<li>工程師必讀: <a href="http://www.books.com.tw/products/0010456858" target="_blank" rel="external">程式設計師的自我修養</a></li>
<li>資工界的龍之書: <a href="http://www.books.com.tw/products/0010465432" target="_blank" rel="external">編譯系統設計</a></li>
</ol>
<h1 id="C-compiler原理"><a href="#C-compiler原理" class="headerlink" title="C# compiler原理"></a>C# compiler原理</h1><p>C#奠基於.NET Framework之上，.NET Framework所採用名叫JIT(Just In Time)的編譯技術，找出程式執行的熱點(Hot Spot)，以進行即時編譯。</p>
<center><img src="https://i-msdn.sec.s-msft.com/dynimg/IC15013.jpeg" alt="CSharp-Compiler-Flow" title="CSharp-Compiler-Flow"></center>

<p>上圖即是C#編譯的過程，值得注意的是C# Compiler並沒有直接將程式碼編譯成Binary Code，而是先將程式碼編譯成MSIL(Microsoft Intermediated Language，微軟中間碼)，在執行時期時利用.NET Framework內建的CLR(Common Language Runtime)執行JIT Compiler轉成Binary Code執行。</p>
<h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World!!"></a>Hello World!!</h1><p>以下是一段hello world的<a href="https://github.com/Yu-Che-Gao/steven-blog/blob/gh-pages/code/hello.cs" target="_blank" rel="external">程式碼</a></p>
<pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token keyword">using</span> System<span class="token punctuation">;</span>

<span class="token keyword">namespace</span> hello
<span class="token punctuation">{</span>
    <span class="token keyword">class</span> <span class="token class-name">Program</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            System<span class="token punctuation">.</span>Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"hello world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>利用<a href="https://msdn.microsoft.com/en-us/library/78f4aasd.aspx" target="_blank" rel="external">csc.exe</a>編譯完之後會產生一個exe檔。</p>
<p>使用<a href="http://ilspy.net/" target="_blank" rel="external">ILSpy</a>分析這個exe檔，會發現IL碼長這樣。</p>
<pre class="line-numbers language-vim"><code class="language-vim"><span class="token operator">.</span>namespace hello
<span class="token punctuation">{</span>
    <span class="token operator">.</span>class private auto ansi beforefieldinit hello<span class="token operator">.</span>Program
        extends <span class="token punctuation">[</span>mscorlib<span class="token punctuation">]</span>System<span class="token operator">.</span>Object
    <span class="token punctuation">{</span>
        <span class="token operator">/</span><span class="token operator">/</span> Methods
        <span class="token operator">.</span>method public hidebysig static 
            void Main <span class="token punctuation">(</span>
                string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">args</span>
            <span class="token punctuation">)</span> cil managed 
        <span class="token punctuation">{</span>
            <span class="token operator">/</span><span class="token operator">/</span> Method begins at RVA <span class="token number">0x2050</span>
            <span class="token operator">/</span><span class="token operator">/</span> Code size <span class="token number">13</span> <span class="token punctuation">(</span><span class="token number">0xd</span><span class="token punctuation">)</span>
            <span class="token operator">.</span>maxstack <span class="token number">8</span>
            <span class="token operator">.</span>entrypoint

            IL_0000<span class="token punctuation">:</span> nop
            IL_0001<span class="token punctuation">:</span> ldstr <span class="token string">"hello world"</span>
            IL_0006<span class="token punctuation">:</span> <span class="token keyword">call</span> void <span class="token punctuation">[</span>mscorlib<span class="token punctuation">]</span>System<span class="token operator">.</span>Console<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span>
            IL_000b<span class="token punctuation">:</span> nop
            IL_000c<span class="token punctuation">:</span> <span class="token keyword">ret</span>
        <span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">/</span> end of method Program<span class="token punctuation">:</span><span class="token punctuation">:</span>Main

        <span class="token operator">.</span>method public hidebysig specialname rtspecialname 
            instance void <span class="token operator">.</span>ctor <span class="token punctuation">(</span><span class="token punctuation">)</span> cil managed 
        <span class="token punctuation">{</span>
            <span class="token operator">/</span><span class="token operator">/</span> Method begins at RVA <span class="token number">0x205e</span>
            <span class="token operator">/</span><span class="token operator">/</span> Code size <span class="token number">7</span> <span class="token punctuation">(</span><span class="token number">0x7</span><span class="token punctuation">)</span>
            <span class="token operator">.</span>maxstack <span class="token number">8</span>

            IL_0000<span class="token punctuation">:</span> ldarg<span class="token operator">.</span><span class="token number">0</span>
            IL_0001<span class="token punctuation">:</span> <span class="token keyword">call</span> instance void <span class="token punctuation">[</span>mscorlib<span class="token punctuation">]</span>System<span class="token operator">.</span>Object<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">.</span><span class="token function">ctor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            IL_0006<span class="token punctuation">:</span> <span class="token keyword">ret</span>
        <span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">/</span> end of method Program<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">.</span>ctor
    <span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">/</span> end of class hello<span class="token operator">.</span>Program
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>值得注意的是第19行: call void [mscorlib]System.Console::WriteLine(string)。在IL階段並沒有把Console.WriteLine編進去，而是等到CLR載入時才編譯。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[我的大靈C1專題：聖靈的洗]]></title>
      <url>https://Yu-Che-Gao.github.io/steven-blog/2017/02/14/%E6%88%91%E7%9A%84%E5%A4%A7%E9%9D%88C1%E5%B0%88%E9%A1%8C%EF%BC%9A%E8%81%96%E9%9D%88%E7%9A%84%E6%B4%97/</url>
      <content type="html"><![CDATA[<h1 id="前記"><a href="#前記" class="headerlink" title="前記"></a>前記</h1><p>感謝俊平哥還有C1-02組的所有組員們，以及每天晚上都一起研經的室友們，讓我度過了一個體驗研讀神的話是多麼美好的一個禮拜。我們一起跟著使徒的腳步走完整卷使徒行傳，讓我們一起用我們的生命寫下使徒行傳第29章。</p>
<p>今年大靈班C1組最後要我們每個人做不同主題的專題，我分到的題目是&quot;聖靈的洗&quot;，實在覺得神所賜下真理何等美好，因此特此紀錄。讀神的話絕對不是只有知識上的增長，它是絕對能整理出一些值得基督徒一生去活一生去思考的原則。</p>
<h1 id="基本假設"><a href="#基本假設" class="headerlink" title="基本假設"></a>基本假設</h1><p>本文會根據以下三點假設進行推論，不代表任何基督教教派立場，僅嘗試以歸納法從聖經中歸納出一些原則。</p>
<ol>
<li><strong>真理&gt;經歷</strong>：真理必須是經歷的準則，當經歷與真理牴觸時，必須降服於真理之下</li>
<li><strong>真理的敘事必須搭配真理的教訓</strong>：不可以單就某段聖經的故事就任意歸納出一般性的原則，除非故事本身帶有教訓，否則需再搭配其他教訓才能下結論。</li>
<li><strong>上下文愈廣，解釋愈可靠</strong></li>
</ol>
<h1 id="使徒行傳中的-quot-聖靈的洗-quot"><a href="#使徒行傳中的-quot-聖靈的洗-quot" class="headerlink" title="使徒行傳中的&quot;聖靈的洗&quot;"></a>使徒行傳中的&quot;聖靈的洗&quot;</h1><p>在使徒行傳中出現有關&quot;聖靈的洗&quot;的經文主要有四個地方</p>
<ol>
<li>前情提要(1:1~1:11) --&gt; 徒1:5</li>
<li>五旬節事件(2:1~2:42) --&gt; 徒2:38</li>
<li>福音傳至撒瑪利亞(8:5~8:24) --&gt; 徒8:16</li>
<li>哥尼流事件後的講道(10:34~10:48) --&gt; 徒10:45</li>
</ol>
<p>以下針對各段經文進行歸納</p>
<h1 id="前情提要中的-quot-聖靈的洗-quot-徒1-1-1-11"><a href="#前情提要中的-quot-聖靈的洗-quot-徒1-1-1-11" class="headerlink" title="前情提要中的&quot;聖靈的洗&quot;(徒1:1~1:11)"></a>前情提要中的&quot;聖靈的洗&quot;(徒1:1~1:11)</h1><h2 id="分段"><a href="#分段" class="headerlink" title="分段"></a>分段</h2><p>v1~v2 前言</p>
<font color="red">v3~v5 耶穌囑咐要受聖靈的洗</font>

<p>v6~v8 耶穌訴說復興以色列的真正意義</p>
<p>v9~v11 耶穌升天</p>
<h2 id="出現經文"><a href="#出現經文" class="headerlink" title="出現經文"></a>出現經文</h2><p>v5 約翰是用水施洗，但不多幾日，你們要受聖靈的洗</p>
<h2 id="歸納"><a href="#歸納" class="headerlink" title="歸納"></a>歸納</h2><p>&quot;聖靈的洗&quot;是耶穌升天前預言要來的</p>
<h1 id="五旬節事件中的”聖靈的洗”-徒2-1-2-42"><a href="#五旬節事件中的”聖靈的洗”-徒2-1-2-42" class="headerlink" title="五旬節事件中的”聖靈的洗”(徒2:1~2:42)"></a>五旬節事件中的”聖靈的洗”(徒2:1~2:42)</h1><h2 id="分段-1"><a href="#分段-1" class="headerlink" title="分段"></a>分段</h2><p>v11~v11 聖靈降臨</p>
<p>v12~v13 有人認為這些人醉了</p>
<font color="red">v14~v40 彼得講道</font>

<p>v41~v42 結果：門徒+3000人</p>
<h2 id="出現經文-1"><a href="#出現經文-1" class="headerlink" title="出現經文"></a>出現經文</h2><p>v38 彼得說：你們各人要悔改，奉耶穌基督的名受洗，叫你們的罪得赦，就必領受所賜的聖靈</p>
<h2 id="解釋"><a href="#解釋" class="headerlink" title="解釋"></a>解釋</h2><p>v17引用珥2:28-2:32。在此應驗了先知約珥的話。約珥的用詞是&quot;凡有血氣的&quot;，也就是說不分猶太人、外邦人，也不分社會貴賤。</p>
<h2 id="歸納-1"><a href="#歸納-1" class="headerlink" title="歸納"></a>歸納</h2><ol>
<li>聖靈的洗=聖靈的澆灌=受聖靈</li>
<li>聖靈的洗要給所有人，不分社經地位</li>
<li>應驗先知約珥的預言</li>
<li>聖靈充滿是&quot;聖靈的洗&quot;之結果</li>
</ol>
<h1 id="福音傳至撒瑪利亞-徒8-5-8-24"><a href="#福音傳至撒瑪利亞-徒8-5-8-24" class="headerlink" title="福音傳至撒瑪利亞(徒8:5~8:24)"></a>福音傳至撒瑪利亞(徒8:5~8:24)</h1><h2 id="分段-2"><a href="#分段-2" class="headerlink" title="分段"></a>分段</h2><p>v5~v8腓利在撒瑪利亞宣講基督</p>
<p>v9~v13 西門信主</p>
<font color="red">v14~v17 彼得約翰叫撒人受聖靈</font>

<p>v18~v24 西門的軟弱與悔改</p>
<h2 id="出現經文-2"><a href="#出現經文-2" class="headerlink" title="出現經文"></a>出現經文</h2><p>v16 因為聖靈還沒有降在他們一個人身上，他們只奉主耶穌的名受了洗。</p>
<h2 id="解釋-1"><a href="#解釋-1" class="headerlink" title="解釋"></a>解釋</h2><ol>
<li>v17之後僅紀錄西門的悔改</li>
<li>v25使徒就回家了</li>
<li>此段應驗了1:8，耶穌預言的&quot;福音要傳到撒瑪利亞&quot;，因此在此事相當特殊的事件</li>
<li>撒瑪利亞人 &lt;----仇家----&gt; 猶太人</li>
</ol>
<h2 id="歸納-2"><a href="#歸納-2" class="headerlink" title="歸納"></a>歸納</h2><ol>
<li>特別的地方需要特別的作為</li>
<li>沒有任何有關”聖靈的洗”之教訓</li>
</ol>
<h1 id="哥尼流事件後的講道-徒10-34-10-48"><a href="#哥尼流事件後的講道-徒10-34-10-48" class="headerlink" title="哥尼流事件後的講道(徒10:34~10:48)"></a>哥尼流事件後的講道(徒10:34~10:48)</h1><h2 id="分段-3"><a href="#分段-3" class="headerlink" title="分段"></a>分段</h2><p>v34~v43 彼得講道</p>
<p>v43~v48 聖靈降下</p>
<h2 id="出現經文-3"><a href="#出現經文-3" class="headerlink" title="出現經文"></a>出現經文</h2><p>v45 那些奉割禮、和彼得同來的信徒，見聖靈的恩賜也澆在外邦人身上，就都希奇</p>
<h2 id="解釋-2"><a href="#解釋-2" class="headerlink" title="解釋"></a>解釋</h2><ol>
<li>v47 彼得說:” 這些人既受了聖靈” --&gt; 受聖靈=聖靈的恩賜</li>
<li>11:16 再次敘述到同一件事情時將&quot;聖靈的洗&quot;與&quot;聖靈的恩賜&quot;相連起來</li>
<li>v47 &quot;先受聖靈才用水施洗&quot;，與在此之前&quot;先用水施洗才受聖靈&quot;的順序不同</li>
</ol>
<h2 id="歸納-3"><a href="#歸納-3" class="headerlink" title="歸納"></a>歸納</h2><ol>
<li>受聖靈=聖靈的洗</li>
<li>聖靈的恩賜與聖靈的洗同時降下</li>
<li>先受聖靈才用水施洗，跟前面順序不同</li>
</ol>
<h1 id="4個-quot-聖靈的洗-quot-之比較"><a href="#4個-quot-聖靈的洗-quot-之比較" class="headerlink" title="4個&quot;聖靈的洗&quot;之比較"></a>4個&quot;聖靈的洗&quot;之比較</h1><table>

<th>---</th><th>前情提要</th><th>五旬節事件</th><th>福音傳至撒瑪利亞</th><th>哥尼流事件後的講道</th>

<tr>

<td><b>文體</b></td><td>記敘文+教訓</td><td>記敘文+教訓</td><td>記敘文</td><td>記敘文+教訓(教訓與聖靈的洗無關)</td>

</tr>

<tr>

<td><b>歸納</b></td><td>耶穌預言聖靈的洗</td><td>聖靈的洗要給所有人，不分社經地位<br>聖靈的洗--&gt;聖靈充滿</td><td>特別的地方需要特別的作為</td><td>先受聖靈才用水施洗，跟前面順序不同</td>

</tr>

</table>

<p>根據文體可以看出能夠針對聖靈的洗歸納出一般性原則的只有前兩段，後面兩段是為特殊事件，需再搭配其他聖經上的教訓才能看見全貌。</p>
<h1 id="總原則"><a href="#總原則" class="headerlink" title="總原則"></a>總原則</h1><p>根據以上歸納的結果，可以整理出一些原則</p>
<ol>
<li>聖靈的澆灌=聖靈的洗=受聖靈</li>
<li>聖靈的恩賜與&quot;聖靈的洗&quot;同時降下</li>
<li>聖靈充滿是&quot;聖靈的洗&quot;之結果</li>
<li>聖靈的洗要給所有信徒</li>
<li>聖靈的洗與約翰的洗並沒有順序性</li>
</ol>
<p>根據第四第五點的延伸：信的人都受了聖靈的洗 --&gt; 弗1：13</p>
<h1 id="聖靈充滿-VS-聖靈的洗"><a href="#聖靈充滿-VS-聖靈的洗" class="headerlink" title="聖靈充滿 VS 聖靈的洗"></a>聖靈充滿 VS 聖靈的洗</h1><p>&quot;聖靈充滿&quot;是&quot;聖靈的洗&quot;之結果，那麼聖靈充滿會有何特徵。</p>
<p><a href="https://bible.fhl.net/new/search.php?VERSION=unv&amp;orig=0&amp;TABFLAG=1&amp;keyword=%E8%81%96%E9%9D%88%E5%85%85%E6%BB%BF" target="_blank" rel="external">搜尋全本聖經</a>會發現弗5：18~5：19給出這個問題的解答：</p>
<ol>
<li>詩章：原文是&quot;詩篇&quot;</li>
<li>頌詞：原文是&quot;讚美詩歌&quot;</li>
<li>靈歌：與啟5:9，&quot;新歌&quot;同一個字</li>
<li>口唱心和地讚美主：原文是&quot;用心歌唱且歌頌給你們的主&quot;</li>
</ol>
<h1 id="應用"><a href="#應用" class="headerlink" title="應用"></a>應用</h1><ol>
<li>不需要再求類似於五旬節的神祕經驗。</li>
<li>要一直被聖靈充滿。</li>
<li>在理性上知道真理，在感性上讚美神。</li>
</ol>
<h1 id="參考文獻"><a href="#參考文獻" class="headerlink" title="參考文獻"></a>參考文獻</h1><p>斯托得&lt;當代聖靈工作&gt;</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[我的大靈日記: 猶太會堂]]></title>
      <url>https://Yu-Che-Gao.github.io/steven-blog/2017/02/09/%E6%88%91%E7%9A%84%E5%A4%A7%E9%9D%88%E6%97%A5%E8%A8%98-%E7%8C%B6%E5%A4%AA%E6%9C%83%E5%A0%82/</url>
      <content type="html"><![CDATA[<h1 id="猶太會堂簡介"><a href="#猶太會堂簡介" class="headerlink" title="猶太會堂簡介"></a>猶太會堂簡介</h1><p>根據<a href="https://zh.wikipedia.org/wiki/%E7%8C%B6%E5%A4%AA%E6%9C%83%E5%A0%82" target="_blank" rel="external">維基百科</a>，
猶太教堂（或稱猶太會堂）的西文名稱是從希臘語συναγωγη而來，轉換成拉丁字母是synagogé，直譯就是「聚會的場所」。</p>
<p>下面就是其中一間猶太會堂的圖。</p>
<p><img src="/steven-blog/images/猶太會堂.jpg" alt="猶太會堂" title="猶太會堂"></p>
<h1 id="猶太公會"><a href="#猶太公會" class="headerlink" title="猶太公會"></a>猶太公會</h1><p>根據<a href="https://zh.wikipedia.org/wiki/%E7%8C%B6%E5%A4%AA%E5%85%AC%E6%9C%83" target="_blank" rel="external">維基百科</a>，
猶太公會或猶太公議會（希伯來語：סנהדרין，希臘語：συνέδριον，意思就是「坐在一起」）是古代以色列由71位猶太長老組成的立法議會和最高法庭。這個議會包括一名大法官、一名副大法官和其他69名成員。在開會時這其他69名議員坐成半圓形。</p>
<p>傳統的猶太公會起源論認為其出自民11:15</p>
<p>目前已經沒有猶太公會，但後來一直有人想重建猶太公會，因為按照傳統在彌賽亞降臨之前必須重建公會。
但都遭到某些猶太人的反對。</p>
<h1 id="聖經中的猶太會堂"><a href="#聖經中的猶太會堂" class="headerlink" title="聖經中的猶太會堂"></a>聖經中的猶太會堂</h1><p><a href="https://bible.fhl.net/new/search.php?VERSION=unv&amp;orig=0&amp;TABFLAG=1&amp;keyword=%E5%85%AC%E6%9C%83" target="_blank" rel="external">信望愛查詢</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[我的大靈日記使徒行傳第四~八章]]></title>
      <url>https://Yu-Che-Gao.github.io/steven-blog/2017/02/07/%E6%88%91%E7%9A%84%E5%A4%A7%E9%9D%88%E6%97%A5%E8%A8%98%E4%BD%BF%E5%BE%92%E8%A1%8C%E5%82%B3%E7%AC%AC%E5%9B%9B-%E5%85%AB%E7%AB%A0/</url>
      <content type="html"><![CDATA[<h1 id="使徒行傳4-32-5-16細研"><a href="#使徒行傳4-32-5-16細研" class="headerlink" title="使徒行傳4:32~5:16細研"></a>使徒行傳4:32~5:16細研</h1><h2 id="觀察"><a href="#觀察" class="headerlink" title="觀察"></a>觀察</h2><ol>
<li>4:32~4:35 初代教會凡物公用的光景</li>
<li>4:36~4:37 巴拿巴是好榜樣</li>
<li>5:1~5:16  亞夫婦是壞榜樣</li>
</ol>
<h2 id="解釋"><a href="#解釋" class="headerlink" title="解釋"></a>解釋</h2><h3 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h3><ol>
<li>難道上帝支持共產主義嗎?</li>
<li>&quot;其餘的人&quot;指的是誰?(5:13)</li>
<li>為甚麼要凡物公用?</li>
</ol>
<h3 id="Ans"><a href="#Ans" class="headerlink" title="Ans"></a>Ans</h3><ol>
<li>當時的時代背景是猶太教朝聖者回來過節時信耶穌的，
很多人東西沒有帶很夠，因此需要凡物公用。</li>
<li>5:12的&quot;他們&quot;可以翻成&quot;信的人&quot;，因此&quot;其餘的人&quot;就是&quot;不信的人&quot;。</li>
<li>同1.</li>
</ol>
<h2 id="歸納"><a href="#歸納" class="headerlink" title="歸納"></a>歸納</h2><ol>
<li>不要欺騙聖靈</li>
<li>上帝很有原則</li>
<li>重視教會的聖潔</li>
<li>彼此相愛，看見別人需要</li>
<li>甘心樂意獻上所有</li>
<li>誠實面對上帝</li>
</ol>
<h2 id="應用"><a href="#應用" class="headerlink" title="應用"></a>應用</h2><p>看見別人有需要時就要捨己</p>
<h1 id="使徒行傳5-17-5-31細研"><a href="#使徒行傳5-17-5-31細研" class="headerlink" title="使徒行傳5:17~5:31細研"></a>使徒行傳5:17~5:31細研</h1><h2 id="提要"><a href="#提要" class="headerlink" title="提要"></a>提要</h2><p>大祭司和他的一切同人，就是撒都該教門的人抓住使徒
主的使者晚上放他們出來，再進殿裡教訓人。守殿官和差役
再次把使徒帶回來質問，使徒們回答順從神，不順從人，是應當的。
公會的人惱羞想殺了使徒，而迦瑪列持平的評論。公會釋放使徒。</p>
<p>--&gt;迦瑪列: 保羅的老師</p>
<h1 id="使徒行傳6-1-6-15細研"><a href="#使徒行傳6-1-6-15細研" class="headerlink" title="使徒行傳6:1~6:15細研"></a>使徒行傳6:1~6:15細研</h1><h2 id="解釋-1"><a href="#解釋-1" class="headerlink" title="解釋"></a>解釋</h2><h3 id="Question-1"><a href="#Question-1" class="headerlink" title="Question"></a>Question</h3><ol>
<li>司提反不是管飯食的嗎?(v2)怎麼後來去&quot;在民間行了大奇事和神蹟&quot;(v8)?</li>
<li>為甚麼百姓、長老，並文士說&quot;我們曾聽見他說，這拿撒勒人耶穌要毀壞此地，也要改變摩西所交給我們的規條&quot;?(v14)</li>
</ol>
<h3 id="Ans-1"><a href="#Ans-1" class="headerlink" title="Ans"></a>Ans</h3><ol>
<li>能夠傳福音的不只使徒</li>
<li>是毀謗，公會的人以路21:6耶穌說過的話斷章取義，另外太5:18說道耶穌來是要成全律法。</li>
</ol>
<h2 id="歸納-1"><a href="#歸納-1" class="headerlink" title="歸納"></a>歸納</h2><ol>
<li>能夠出去傳福音的不只是牧師</li>
<li>學會管理信仰群體是一件重要的事情</li>
</ol>
<h2 id="應用-1"><a href="#應用-1" class="headerlink" title="應用"></a>應用</h2><p>禱告求神賜下管理的智慧</p>
<h1 id="使徒行傳第八章"><a href="#使徒行傳第八章" class="headerlink" title="使徒行傳第八章"></a>使徒行傳第八章</h1><h2 id="觀察-1"><a href="#觀察-1" class="headerlink" title="觀察"></a>觀察</h2><ol>
<li>v1~v8 司提反事件後的交代</li>
<li>v9~v11 西門行邪術</li>
<li>v12~v13 西門信主</li>
<li>v14~v17 彼得約翰為撒瑪利亞人按手</li>
<li>v18~v24 彼得教訓西門</li>
<li>v25 使徒回程並傳福音</li>
<li>v26~v40 腓力傳福音給太監</li>
</ol>
<h2 id="解釋-2"><a href="#解釋-2" class="headerlink" title="解釋"></a>解釋</h2><h3 id="Question-2"><a href="#Question-2" class="headerlink" title="Question"></a>Question</h3><ol>
<li>v15~v16為甚麼要按手?</li>
<li>為甚麼路加突然在這裡記腓力傳福音給太監?</li>
<li>為甚麼路加不直接從司提反事件(7:60)接到掃羅信主，而要插入這段?</li>
</ol>
<h3 id="Ans-2"><a href="#Ans-2" class="headerlink" title="Ans"></a>Ans</h3><ol>
<li>一種象徵 --&gt; 參考司托得&lt;當代聖靈工作&gt;</li>
<li>太監是一個有大權的人(v27)，代表福音要廣傳了而非限縮在猶太全地。
另外路加的寫作對象是提阿非羅大人，路加想引領提阿非羅知道福音是這樣傳揚到外邦人的。</li>
<li>目前福音已經傳到撒瑪利亞，呼應1:8。</li>
</ol>
<h2 id="歸納-2"><a href="#歸納-2" class="headerlink" title="歸納"></a>歸納</h2><ol>
<li>不論對象是誰都要傳福音</li>
<li>屬靈的能力是不能用錢買的</li>
<li>順服聖靈的結果是超乎想像的</li>
</ol>
<h2 id="應用-2"><a href="#應用-2" class="headerlink" title="應用"></a>應用</h2><p>學習踏出自己的舒適圈去傳揚福音</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[我的大靈日記:使徒行傳第二~四章]]></title>
      <url>https://Yu-Che-Gao.github.io/steven-blog/2017/02/06/%E6%88%91%E7%9A%84%E5%A4%A7%E9%9D%88%E6%97%A5%E8%A8%98%E4%BD%BF%E5%BE%92%E8%A1%8C%E5%82%B3%E7%AC%AC%E4%BA%8C~%E5%9B%9B%E7%AB%A0/</url>
      <content type="html"><![CDATA[<h1 id="使徒行傳第二章細研"><a href="#使徒行傳第二章細研" class="headerlink" title="使徒行傳第二章細研"></a>使徒行傳第二章細研</h1><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>五旬節聖靈降臨(v1~v5)</p>
<p>--&gt;聖靈給門徒說各國鄉談的能力(v6~v12)</p>
<p>--&gt;有人譏笑說門徒喝醉了(v13)</p>
<p>--&gt;彼得證明門徒沒有喝醉(v14~v15)</p>
<p>--&gt;證明約珥的話(珥2:28~2:32)應驗(v16~v21)</p>
<p>--&gt;簡介耶穌死而復活(v22~v24)</p>
<p>--&gt;大衛因主歡喜(v25~v28)</p>
<p>--&gt;證明大衛已經預先看明(v29~v36)</p>
<p>--&gt;眾人扎心並悔改(v37~v41)</p>
<h2 id="解釋"><a href="#解釋" class="headerlink" title="解釋"></a>解釋</h2><h3 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h3><ol>
<li>v16~v21跟五旬節聖靈充滿事件有甚麼關係?</li>
<li>v25的&quot;大衛指著他說&quot;裡面的&quot;他&quot;指的是誰?&quot;我看見主常在我眼前&quot;的&quot;主&quot;指的是誰?</li>
</ol>
<h3 id="Ans"><a href="#Ans" class="headerlink" title="Ans"></a>Ans</h3><ol>
<li><p>有人說門徒喝醉了，彼得說現在是早上九點不太可能有人喝酒，
 緊接著證明此現象就是約珥書講的事情。</p>
</li>
<li><p>根據v22~v24指的&quot;他&quot;是&quot;拿撒勒人耶穌&quot;。
 人不太可能直接看見主，而且還是&quot;常在我眼前&quot;，
 再加上v31講明大衛已經&quot;預先看見這事&quot;
 因此這裡指的&quot;主&quot;是&quot;耶穌&quot;。
 馬可福音12:36~37指出以色列人從沒想過這件事。</p>
</li>
</ol>
<h2 id="歸納"><a href="#歸納" class="headerlink" title="歸納"></a>歸納</h2><p>當時候以色列人認為大衛是一個精神象徵，
並且一直在等待大衛的後裔，
但還未認出耶穌就是那位大衛的後裔。</p>
<h1 id="使徒行傳3-12-26細研"><a href="#使徒行傳3-12-26細研" class="headerlink" title="使徒行傳3:12~26細研"></a>使徒行傳3:12~26細研</h1><h2 id="觀察"><a href="#觀察" class="headerlink" title="觀察"></a>觀察</h2><ol>
<li>v12~v16 被殺的主醫好瘸腿的</li>
<li>v17~v21 耶穌將再來</li>
<li>v22~v26 眾先知的預言也應證耶穌再來</li>
</ol>
<h2 id="解釋-1"><a href="#解釋-1" class="headerlink" title="解釋"></a>解釋</h2><h3 id="Question-1"><a href="#Question-1" class="headerlink" title="Question"></a>Question</h3><p>彼得說&quot;我曉得你們做這事是出於不知&quot;(v17)，可是卻也叫他們要悔改(v19)，難道無知也是一種罪嗎?</p>
<h3 id="Ans-1"><a href="#Ans-1" class="headerlink" title="Ans"></a>Ans</h3><p>根據路23:4~5, 23:10，這裡的官長指的是&quot;祭司長和文士&quot;，是腐敗的官長，
這些人應該是最熟悉律法的，卻從來沒有認識到耶穌就是基督。</p>
<h2 id="歸納-1"><a href="#歸納-1" class="headerlink" title="歸納"></a>歸納</h2><ol>
<li>彼得以眾先知與耶穌警惕我們要悔改信神。</li>
<li>應注意而未注意是一種罪。</li>
<li>應悔改使罪可以塗抹。</li>
<li>堅信耶穌會再來。</li>
<li>因著信心，靠著耶穌行神蹟，但行神蹟的最終目的仍是要&quot;作主的見證&quot;。(徒1:8)</li>
</ol>
<h2 id="應用"><a href="#應用" class="headerlink" title="應用"></a>應用</h2><p>應要熟讀真理，沒有熟讀真理也是一種罪。</p>
<h1 id="使徒行傳二三章比較"><a href="#使徒行傳二三章比較" class="headerlink" title="使徒行傳二三章比較"></a>使徒行傳二三章比較</h1><table>

<tr>

<th>---</th>

<th>五旬節事件(2:14-36)</th>

<th>美門事件(3:12-26)</th>

</tr>

<tr>

<td>對象</td>

<td>猶太教朝聖者</td>

<td>耶城鄉民</td>

</tr>

<tr>

<td>重點</td>

<td>耶穌是基督</td>

<td>悔改</td>

</tr>

<tr>

<td>行動</td>

<td>奉耶穌的名受洗</td>

<td>信他的名</td>

</tr>

<tr>

<td>結果</td>

<td>+3000人</td>

<td>被抓+5000男丁</td>

</tr>

</table>

<h1 id="使徒行傳4-1-4-22細研"><a href="#使徒行傳4-1-4-22細研" class="headerlink" title="使徒行傳4:1~4:22細研"></a>使徒行傳4:1~4:22細研</h1><h2 id="提要"><a href="#提要" class="headerlink" title="提要"></a>提要</h2><p>美門事件後，祭司們和守殿官，並撒都該人忽然來了。
把彼得和約翰抓回去了，被大祭司亞那和該亞法、約翰、亞歷山大，並大祭司的親族
質問。彼得被聖靈充滿說道他是奉耶穌的名行善事，官長希奇。
官長叫彼得跟約翰不再奉這名對人講論。但彼得跟約翰堅持要聽從神。</p>
<p>--&gt;撒督該人: 是猶太教中的一派，成員多半是富有的祭司，信仰以
摩西五經為主要根據，不接受口頭傳統，不相信有天使、鬼魂和復活這些事。而他們不接受復活的主要理
由就是「無法由摩西五經中找到任何證據」，所以他們不須要相信。</p>
<h2 id="歸納-2"><a href="#歸納-2" class="headerlink" title="歸納"></a>歸納</h2><p>信耶穌得智慧。</p>
<h1 id="使徒行傳4-23-4-31細研"><a href="#使徒行傳4-23-4-31細研" class="headerlink" title="使徒行傳4:23~4:31細研"></a>使徒行傳4:23~4:31細研</h1><ol>
<li>v23 轉述受審過程</li>
<li>v24~v26 同心合意向神禱告</li>
<li>v27~v30 眾人禱告求主賜能力</li>
<li>v31 被聖靈充滿</li>
</ol>
<h2 id="解釋-2"><a href="#解釋-2" class="headerlink" title="解釋"></a>解釋</h2><h3 id="Question-2"><a href="#Question-2" class="headerlink" title="Question"></a>Question</h3><p>V24說的&quot;主&quot;是耶穌還是上帝?</p>
<h3 id="Ans-2"><a href="#Ans-2" class="headerlink" title="Ans"></a>Ans</h3><p>根據v26，&quot;主的受膏者&quot;指的是耶穌，因此這裡的&quot;主&quot;是上帝。</p>
<h1 id="專卷研經-參考政雄哥查經講道"><a href="#專卷研經-參考政雄哥查經講道" class="headerlink" title="專卷研經(參考政雄哥查經講道)"></a>專卷研經(參考政雄哥查經講道)</h1><h2 id="使徒行傳概論"><a href="#使徒行傳概論" class="headerlink" title="使徒行傳概論"></a>使徒行傳概論</h2><h3 id="作者"><a href="#作者" class="headerlink" title="作者"></a>作者</h3><p>路加</p>
<h4 id="外證-主教愛任鈕-130-202-AD-與穆拉多利經目-175-AD"><a href="#外證-主教愛任鈕-130-202-AD-與穆拉多利經目-175-AD" class="headerlink" title="外證: 主教愛任鈕(130~202 AD)與穆拉多利經目(175 AD)"></a>外證: 主教愛任鈕(130~202 AD)與穆拉多利經目(175 AD)</h4><p>都提到路加是福音書的作者</p>
<h4 id="內證"><a href="#內證" class="headerlink" title="內證:"></a>內證:</h4><pre><code> a. 使徒行傳多次用&quot;我們&quot;表達當時的特殊狀況:

    i. 徒16:10~17(保羅第二次宣道)
    ii. 徒20:5~15, 徒21:1~18(保羅第三次宣道)
    iii. 徒27:1~28:16(提撒利亞--&gt;羅馬)
    vi. 門23~24, 西4:10~17(列路加為同伴)
    v. 提後4:11(路加留在保羅身邊)

 b. 寫作風格與醫生吻合(徒28:6)
</code></pre><h3 id="寫作對象"><a href="#寫作對象" class="headerlink" title="寫作對象"></a>寫作對象</h3><p>提阿非羅(根據路1:3可能是基督徒)</p>
<h3 id="本書特色"><a href="#本書特色" class="headerlink" title="本書特色"></a>本書特色</h3><p>具有橋梁性:</p>
<pre><code>1. 福音書--&gt;書信
2. 猶太人--&gt;外邦人
3. 耶穌--&gt;聖靈
</code></pre><h3 id="使徒行傳1-1-11"><a href="#使徒行傳1-1-11" class="headerlink" title="使徒行傳1:1~11"></a>使徒行傳1:1~11</h3><h4 id="徒1-1-1-3-序言"><a href="#徒1-1-1-3-序言" class="headerlink" title="徒1:1~1:3 序言"></a>徒1:1~1:3 序言</h4><p>--&gt; v1~v2交代與前書有何區別</p>
<p>--&gt; v3與路24比較: 證明耶穌就是彌賽亞</p>
<h4 id="徒1-4-1-11"><a href="#徒1-4-1-11" class="headerlink" title="徒1:4~1:11"></a>徒1:4~1:11</h4><p>--&gt;v4~v8 重複路24:47~49</p>
<p>--&gt;v4~v5 等候聖靈的洗</p>
<h5 id="聖靈的洗"><a href="#聖靈的洗" class="headerlink" title="聖靈的洗"></a>聖靈的洗</h5><pre><code>&quot;聖靈的洗&quot;在新約出現7次
</code></pre><ol>
<li>四福音--&gt;施洗約翰預言(太3:11, 可1:8, 路3:16, 約1:33)</li>
<li>耶穌認證此預言(徒1:4~5)</li>
<li>五旬節事件(徒11:15~17)</li>
<li>林前12:13</li>
</ol>
<p>--&gt;v6~v8 任務: 要作主的見證(重複路24:47~48)</p>
<ol>
<li>v4 等候的重要</li>
<li>v8 依靠神的重要</li>
<li>v8 勿捨近求遠</li>
</ol>
<p>--&gt;v9~v11 耶穌升天</p>
<ol>
<li>得最高榮耀</li>
<li>不會在突然出現</li>
<li>開始信心的時代</li>
<li>新關係的展開</li>
<li>差派聖靈降臨</li>
</ol>
<h3 id="徒1-15-20-解決缺員問題"><a href="#徒1-15-20-解決缺員問題" class="headerlink" title="徒1:15~20 解決缺員問題"></a>徒1:15~20 解決缺員問題</h3><h3 id="徒1-21-22-提出使徒的資格和使命"><a href="#徒1-21-22-提出使徒的資格和使命" class="headerlink" title="徒1:21~22 提出使徒的資格和使命"></a>徒1:21~22 提出使徒的資格和使命</h3><h3 id="徒1-23-23"><a href="#徒1-23-23" class="headerlink" title="徒1:23~23"></a>徒1:23~23</h3><ol>
<li>提出兩個候選人</li>
<li>禱告</li>
<li>搖籤得馬提亞</li>
</ol>
<p>--&gt; 同工適合性:</p>
<ol>
<li>常同在</li>
<li>經歷主的作為</li>
<li>做見證</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[我的大靈日記:使徒行傳第一章之觀察篇]]></title>
      <url>https://Yu-Che-Gao.github.io/steven-blog/2017/02/05/%E6%88%91%E7%9A%84%E5%A4%A7%E9%9D%88%E6%97%A5%E8%A8%98-%E4%BD%BF%E5%BE%92%E8%A1%8C%E5%82%B3%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%B9%8B%E8%A7%80%E5%AF%9F%E7%AF%87/</url>
      <content type="html"><![CDATA[<h1 id="歸納法查經REVIEW"><a href="#歸納法查經REVIEW" class="headerlink" title="歸納法查經REVIEW"></a>歸納法查經REVIEW</h1><ol>
<li>觀察: 分段</li>
<li>解釋: 問問題</li>
<li>歸納: 歸納出重點</li>
<li>應用: 反思如何應用到現代</li>
</ol>
<h1 id="使徒行傳第一二章提要"><a href="#使徒行傳第一二章提要" class="headerlink" title="使徒行傳第一二章提要"></a>使徒行傳第一二章提要</h1><p>路加寫了使徒行傳，其寫作對象為提阿非羅，已經寫了
路加福音來記錄耶穌的事蹟。路加將故事接續下去，首
先描述耶穌升天的過程，接著門徒聚集到橄欖山上的樓
房抽籤決定馬提亞代替猶大，十二使徒產生。接著五旬
節到了，使徒同心禱告，聖靈降臨，並且彼得大受感動
而講道，門徒約增加三千人。從那之後門徒都聚集在一起
，凡物公用，初代教會產生。</p>
<h1 id="使徒行傳第一章"><a href="#使徒行傳第一章" class="headerlink" title="使徒行傳第一章"></a>使徒行傳第一章</h1><p>觀察: </p>
<pre><code>(一) 前情摘要(v1~v11)

    a. 簡述前書(v1~v5)
    b. 耶穌最後的應許(v6~v11)

(二) 十二使徒確立(v12~v26)

    a. 眾人到城中樓房齊聲禱告(v12~v14)
    b. 彼得講述猶大賣主(v15~v20)
    c. 第十二使徒的選舉(v21~v26)
</code></pre><h1 id="個人預查"><a href="#個人預查" class="headerlink" title="個人預查"></a>個人預查</h1><p>解釋:</p>
<ol>
<li>如果按照v22的標準揀選使徒候選人，為甚麼後來巴拿巴跟保羅都被列為使徒(14:14)?</li>
<li>為甚麼一定要補選到十二使徒，少一個使徒不行嗎?(v26)</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo 基本安裝]]></title>
      <url>https://Yu-Che-Gao.github.io/steven-blog/2017/02/04/hexo-setup/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
